// -->[ , , List] //
// ============================ //
1.classList:
-classList adalah objek yang menyediakan metode untuk menambah, 
  menghapus, dan memeriksa keberadaan kelas pada elemen.
-Metode add(class): Menambah kelas baru ke elemen.
-Metode remove(class): Menghapus kelas dari elemen.
-Metode toggle(class): Mengubah keberadaan kelas pada elemen; jika 
  kelas sudah ada, maka akan dihapus, dan jika tidak, maka akan ditambahkan.
-Metode contains(class): Memeriksa apakah elemen memiliki kelas tertentu.
-Contoh penggunaan: element.classList.add('nama-kelas'), 
  element.classList.remove('nama-kelas'), dst.

2.className:
-className adalah properti yang digunakan untuk mendapatkan atau
   menetapkan daftar kelas pada elemen sebagai string.
-Jika Anda mengatur nilai className, itu akan mengganti semua 
  kelas yang ada pada elemen dengan kelas yang baru.
-Contoh penggunaan: element.className = 'nama-kelas-1 nama-kelas-2'.
/// -- ///
 var ul = document.getElementById('ul');
 ul.addEventListener('click', function(event){
            if(event.target.classList.contains("edit")){
                var listItem = event.target.parentElement;
- (event) bisa disebut variabel yang minyimpan fungsi onclick yang 
 bisa digunakan mengakses properti atau metode
/// --- ========= --- ///

select name="" id="opsii">
    <option >1</option>
    <option >2</option>
    <option >3</option>
</select>
<h1 id="tesW"></h1>
var arrayWaktu = [
        { timeZone: 'Asia/Jakarta' },
        { timeZone: 'Asia/Riyadh' },
        { timeZone: 'Europe/London' },
        { timeZone: 'Europe/Moscow' },
        ];
        document.getElementById('opsii').addEventListener('change', (a) => {
             // Menggunakan parseInt untuk mengonversi string ke integer
            //  Menggunkan a.target.value, Tidak perlu mengisi value=" " di <opsi>
        let opsi = parseInt(a.target.value);
        console.log(opsi);
        document.getElementById('tesW').innerText = arrayWaktu[opsi].timeZone || "err"; // Menampilkan arrayWaktu[opsi] atau string kosong jika arrayWaktu[opsi] tidak ada
        console.log(now.toLocaleString('en-US', arrayWaktu[opsi]));
        })

       // ? template literals  --
        ${a.target.value} adalah contoh penggunaan template literals dalam JavaScript. 
        Template literals memungkinkan Anda menyisipkan nilai variabel atau ekspresi ke 
        dalam string. Contoh:
        const nama = 'John';
        console.log(`Halo, ${nama}!`);

/// --- ========= --- ///

    // ? js Timing Events --
    -setTimeout(function, milliseconds)
      Menjalankan suatu fungsi, setelah menunggu beberapa milidetik tertentu.
    -setInterval(function, milliseconds)
      Sama seperti setTimeout(), tetapi mengulangi eksekusi fungsi secara terus menerus.
    https://www.w3schools.com/js/js_timing.asp